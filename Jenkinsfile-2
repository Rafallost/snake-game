pipeline {
  agent any
  environment {
    // dzięki temu wszystkie docker‐owe sh będą używać Twojego DIND
    DOCKER_HOST = 'tcp://dind:2375'
    DOCKER_TLS_CERTDIR = ''
  }
  stages {
    stage('Compile & Test') {
      // używamy obrazu Go z dependencjami
      agent {
        docker {
          image 'rafal206/dependencies:1.0'
          // wyłączamy ENTRYPOINT i działamy jako root aby pisać do workspace
          args '--entrypoint="" -u root -v $WORKSPACE:/app'
        }
      }
      steps {
        dir('snake') {    // przejdź do katalogu z kodem
          echo "=== BUILD ==="
          sh 'make build'
          echo "=== TEST ==="
          sh 'go test ./...'
        }
      }
    }

    stage('Build Docker Image') {
      // wracamy na główny agent (jenkins z DIND)
      agent any
      steps {
        echo 'Buduję finalny obraz aplikacji'
        sh 'docker build -t rafal206/snake-game:${BUILD_NUMBER} .'
      }
    }

    stage('Push Docker Image') {
      agent any
      steps {
        echo 'Wypycham obraz na Docker Hub'
        sh 'docker push rafal206/snake-game:${BUILD_NUMBER}'
      }
    }

    stage('Archive Logs') {
      agent any
      steps {
        archiveArtifacts artifacts: '**/test_*.log', fingerprint: true
      }
    }
  }

  post {
    always {
      echo 'Pipeline zakończone. Logi i obraz dostępne.'
    }
  }
}
